// Generated by CoffeeScript 1.9.3
(function() {
  var browserNativePbkdf2, cryptoJS, jsPBKDF2, nativePBKDF2;

  cryptoJS = require('crypto');

  browserNativePbkdf2 = function() {
    var buffer, error, ref, ref1;
    try {
      if (!global.crypto) {
        return false;
      }
      if (global.crypto.webkitSubtle) {
        return false;
      }
      buffer = new Buffer('data', 'binary');
      if ((ref = global.crypto) != null) {
        if ((ref1 = ref.subtle) != null) {
          ref1.importKey('raw', buffer, {
            name: 'PBKDF2'
          }, false, ['deriveBits']);
        }
      }
      return true;
    } catch (_error) {
      error = _error;
      console.error(error);
      return false;
    }
  };

  jsPBKDF2 = cryptoJS.pbkdf2;

  nativePBKDF2 = function(passphrase, salt, iterations, keySize, callback) {
    var keyBuffer;
    keyBuffer = new Buffer(passphrase, 'binary');
    return global.crypto.subtle.importKey('raw', keyBuffer, {
      name: 'PBKDF2'
    }, false, ['deriveBits']).then(function(key) {
      return global.crypto.subtle.deriveBits({
        name: 'PBKDF2',
        salt: salt,
        iterations: iterations,
        hash: {
          name: 'SHA-1'
        }
      }, key, 512).then(function(key) {
        return callback(null, key);
      })["catch"](function(error) {
        return callback(error, null);
      });
    })["catch"](function(error) {
      return callback(error, null);
    });
  };

  module.exports = browserNativePbkdf2() ? nativePBKDF2 : jsPBKDF2;

}).call(this);
